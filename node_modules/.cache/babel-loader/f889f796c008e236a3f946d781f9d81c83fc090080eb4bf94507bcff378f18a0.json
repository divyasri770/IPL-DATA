{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Pictures\\\\Desktop\\\\IPL\\\\ipl-coverage\\\\src\\\\components\\\\PlayerReports.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './PlayerReports.css';\n\n// const PlayerReports = () => {\n//   const [playerName, setPlayerName] = useState('');\n//   const [playerRole, setPlayerRole] = useState('');\n//   const [summaryLength, setSummaryLength] = useState(100);\n//   const [playerPhoto, setPlayerPhoto] = useState('');\n\n//   // Add your player photo paths here\n//   const playerImages = {\n//     \"player1\": \"/images/ViratKohli.jpg\",\n\n//   };\n\n//   const handleGenerate = () => {\n//     // Handle the generation logic\n//     // You would typically make a backend request here with the match details and summary length\n//     console.log({ playerName, playerRole, summaryLength });\n\n//     // Set the player photo based on the player name\n//     if (playerImages[playerName]) {\n//       setPlayerPhoto(playerImages[playerName]);\n//     } else {\n//       setPlayerPhoto('path/to/default-image.jpg'); // Default image if player not found\n//     }\n//   };\n\n//   return (\n//     <div className=\"player-reports-container\">\n//       <div className=\"form-container\">\n//         <h2>PLAYER PERFORMANCE</h2>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"playerName\">Enter the name of the player</label>\n//           <input\n//             type=\"text\"\n//             id=\"playerName\"\n//             value={playerName}\n//             onChange={(e) => setPlayerName(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"playerRole\">Enter the Player Role</label>\n//           <input\n//             type=\"text\"\n//             id=\"playerRole\"\n//             value={playerRole}\n//             onChange={(e) => setPlayerRole(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"summaryLength\">Summary Length (words):</label>\n//           <input\n//             type=\"number\"\n//             id=\"summaryLength\"\n//             value={summaryLength}\n//             onChange={(e) => setSummaryLength(e.target.value)}\n//           />\n//         </div>\n//         <button onClick={handleGenerate}>Generate</button>\n//       </div>\n//       <div className=\"summary-display\">\n//         {/* This is where the generated summary would be displayed */}\n//       </div>\n//       <div className=\"player-photo\">\n//         {playerPhoto && <img src={playerPhoto} alt={playerName} />}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PlayerReports;\nimport React, { useState } from 'react';\nimport './PlayerReports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerReports = () => {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [playerRole, setPlayerRole] = useState('');\n  const [playerPhotoUrl, setPlayerPhotoUrl] = useState('');\n  const handleGenerate = () => {\n    // Handle the generation logic\n    // You would typically make a backend request here with the player details to fetch the photo\n    // For now, we will simulate with a placeholder image URL\n    const photoUrl = 'https://via.placeholder.com/150';\n    setPlayerPhotoUrl(photoUrl);\n    console.log({\n      playerName,\n      playerRole\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-reports-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Player Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerName\",\n          children: \"Enter Name of the Player:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerName\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerRole\",\n          children: \"Enter Role of the Player:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerRole\",\n          value: playerRole,\n          onChange: e => setPlayerRole(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-display1\",\n      children: playerPhotoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: playerPhotoUrl,\n          alt: \"Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerReports, \"B+GB9nspfjbleNGE/XllIxLeVFA=\");\n_c = PlayerReports;\nexport default PlayerReports;\nvar _c;\n$RefreshReg$(_c, \"PlayerReports\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlayerReports","_s","playerName","setPlayerName","playerRole","setPlayerRole","playerPhotoUrl","setPlayerPhotoUrl","handleGenerate","photoUrl","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/divya/OneDrive/Pictures/Desktop/IPL/ipl-coverage/src/components/PlayerReports.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './PlayerReports.css';\r\n\r\n// const PlayerReports = () => {\r\n//   const [playerName, setPlayerName] = useState('');\r\n//   const [playerRole, setPlayerRole] = useState('');\r\n//   const [summaryLength, setSummaryLength] = useState(100);\r\n//   const [playerPhoto, setPlayerPhoto] = useState('');\r\n\r\n//   // Add your player photo paths here\r\n//   const playerImages = {\r\n//     \"player1\": \"/images/ViratKohli.jpg\",\r\n   \r\n//   };\r\n\r\n//   const handleGenerate = () => {\r\n//     // Handle the generation logic\r\n//     // You would typically make a backend request here with the match details and summary length\r\n//     console.log({ playerName, playerRole, summaryLength });\r\n\r\n//     // Set the player photo based on the player name\r\n//     if (playerImages[playerName]) {\r\n//       setPlayerPhoto(playerImages[playerName]);\r\n//     } else {\r\n//       setPlayerPhoto('path/to/default-image.jpg'); // Default image if player not found\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"player-reports-container\">\r\n//       <div className=\"form-container\">\r\n//         <h2>PLAYER PERFORMANCE</h2>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"playerName\">Enter the name of the player</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"playerName\"\r\n//             value={playerName}\r\n//             onChange={(e) => setPlayerName(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"playerRole\">Enter the Player Role</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"playerRole\"\r\n//             value={playerRole}\r\n//             onChange={(e) => setPlayerRole(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"summaryLength\">Summary Length (words):</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"summaryLength\"\r\n//             value={summaryLength}\r\n//             onChange={(e) => setSummaryLength(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <button onClick={handleGenerate}>Generate</button>\r\n//       </div>\r\n//       <div className=\"summary-display\">\r\n//         {/* This is where the generated summary would be displayed */}\r\n//       </div>\r\n//       <div className=\"player-photo\">\r\n//         {playerPhoto && <img src={playerPhoto} alt={playerName} />}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PlayerReports;\r\nimport React, { useState } from 'react';\r\nimport './PlayerReports.css';\r\n\r\nconst PlayerReports = () => {\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [playerRole, setPlayerRole] = useState('');\r\n  const [playerPhotoUrl, setPlayerPhotoUrl] = useState('');\r\n\r\n  const handleGenerate = () => {\r\n    // Handle the generation logic\r\n    // You would typically make a backend request here with the player details to fetch the photo\r\n    // For now, we will simulate with a placeholder image URL\r\n    const photoUrl = 'https://via.placeholder.com/150';\r\n    setPlayerPhotoUrl(photoUrl);\r\n    console.log({ playerName, playerRole });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-reports-container\">\r\n      <div className=\"form-container\">\r\n        <h2>Player Report</h2>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"playerName\">Enter Name of the Player:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerName\"\r\n            value={playerName}\r\n            onChange={(e) => setPlayerName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"playerRole\">Enter Role of the Player:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerRole\"\r\n            value={playerRole}\r\n            onChange={(e) => setPlayerRole(e.target.value)}\r\n          />\r\n        </div>\r\n        <button onClick={handleGenerate}>Generate</button>\r\n      </div>\r\n      <div className=\"summary-display1\">\r\n        {playerPhotoUrl && (\r\n          <div className=\"player-photo\">\r\n            <img src={playerPhotoUrl} alt=\"Player\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerReports;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}