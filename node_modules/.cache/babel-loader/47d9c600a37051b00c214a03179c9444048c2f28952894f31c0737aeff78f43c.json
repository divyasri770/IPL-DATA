{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Pictures\\\\Desktop\\\\IPL\\\\ipl-coverage\\\\src\\\\components\\\\PlayerReports.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PlayerReports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerReports = () => {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [playerRole, setPlayerRole] = useState('');\n  const [summaryLength, setSummaryLength] = useState(100);\n  const [playerPhoto, setPlayerPhoto] = useState('');\n  const handleGenerate = () => {\n    // Handle the generation logic\n    console.log({\n      playerName,\n      playerRole,\n      summaryLength\n    });\n\n    // Set player photo based on the player name and role\n    // This is a placeholder logic, you can customize it as per your requirements\n    const photoPath = getPlayerPhoto(playerName, playerRole);\n    setPlayerPhoto(photoPath);\n  };\n  const getPlayerPhoto = (name, role) => {\n    // Logic to determine player photo based on name and role\n    // This is a simple example, ideally, you should map player names to photo paths\n    const playerPhotos = {\n      'Virat': '/images/ViratKo.jpg',\n      'player2': '/images/player2.jpg'\n      // Add more player mappings here\n    };\n\n    return playerPhotos[name.toLowerCase()] || '/images/default.jpg';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match-summary-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PLAYER PERFORMANCE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerName\",\n          children: \"Enter the name of the player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerName\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerRole\",\n          children: \"Enter the Player Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerRole\",\n          value: playerRole,\n          onChange: e => setPlayerRole(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"summaryLength\",\n          children: \"Summary Length (words):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"summaryLength\",\n          value: summaryLength,\n          onChange: e => setSummaryLength(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-display\",\n      children: playerPhoto && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: playerPhoto,\n          alt: playerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerReports, \"Nt/HtRy0bFBlSvqtFqM+jnzW7cs=\");\n_c = PlayerReports;\nexport default PlayerReports;\nvar _c;\n$RefreshReg$(_c, \"PlayerReports\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlayerReports","_s","playerName","setPlayerName","playerRole","setPlayerRole","summaryLength","setSummaryLength","playerPhoto","setPlayerPhoto","handleGenerate","console","log","photoPath","getPlayerPhoto","name","role","playerPhotos","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/divya/OneDrive/Pictures/Desktop/IPL/ipl-coverage/src/components/PlayerReports.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PlayerReports.css';\r\n\r\nconst PlayerReports = () => {\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [playerRole, setPlayerRole] = useState('');\r\n  const [summaryLength, setSummaryLength] = useState(100);\r\n  const [playerPhoto, setPlayerPhoto] = useState('');\r\n\r\n  const handleGenerate = () => {\r\n    // Handle the generation logic\r\n    console.log({ playerName, playerRole, summaryLength });\r\n\r\n    // Set player photo based on the player name and role\r\n    // This is a placeholder logic, you can customize it as per your requirements\r\n    const photoPath = getPlayerPhoto(playerName, playerRole);\r\n    setPlayerPhoto(photoPath);\r\n  };\r\n\r\n  const getPlayerPhoto = (name, role) => {\r\n    // Logic to determine player photo based on name and role\r\n    // This is a simple example, ideally, you should map player names to photo paths\r\n    const playerPhotos = {\r\n      'Virat': '/images/ViratKo.jpg',\r\n      'player2': '/images/player2.jpg',\r\n      // Add more player mappings here\r\n    };\r\n\r\n    return playerPhotos[name.toLowerCase()] || '/images/default.jpg';\r\n  };\r\n\r\n  return (\r\n    <div className=\"match-summary-container\">\r\n      <div className=\"form-container\">\r\n        <h2>PLAYER PERFORMANCE</h2>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"playerName\">Enter the name of the player</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerName\"\r\n            value={playerName}\r\n            onChange={(e) => setPlayerName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"playerRole\">Enter the Player Role</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerRole\"\r\n            value={playerRole}\r\n            onChange={(e) => setPlayerRole(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"summaryLength\">Summary Length (words):</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"summaryLength\"\r\n            value={summaryLength}\r\n            onChange={(e) => setSummaryLength(e.target.value)}\r\n          />\r\n        </div>\r\n        <button onClick={handleGenerate}>Generate</button>\r\n      </div>\r\n      <div className=\"summary-display\">\r\n        {playerPhoto && (\r\n          <div className=\"player-photo\">\r\n            <img src={playerPhoto} alt={playerName} />\r\n          </div>\r\n        )}\r\n        {/* This is where the generated summary would be displayed */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayerReports;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}