{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Pictures\\\\Desktop\\\\IPL\\\\ipl-coverage\\\\src\\\\components\\\\PlayerReports.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './PlayerReports.css';\n\n// const PlayerReports = () => {\n//   const [playerName, setPlayerName] = useState('');\n//   const [playerRole, setPlayerRole] = useState('');\n//   const [playerPhotoUrl, setPlayerPhotoUrl] = useState('');\n//   const [summaryLength, setSummaryLength] = useState(100); // Added state for summary length\n\n//   const playerPhotos = {\n//     \"ViratKohli\": \"/images/Virat Kohli.jpeg\",\n//     \"Virat\": \"/images/Virat Kohli.jpeg\",\n//     \"Kohli\": \"/images/Virat Kohli.jpeg\",\n//     // Add more player names and their photo paths here\n//   };\n\n//   const handleGenerate = () => {\n//     const photoUrl = playerPhotos[playerName] || 'https://via.placeholder.com/150';\n//     setPlayerPhotoUrl(photoUrl);\n//     console.log({ playerName, playerRole, summaryLength, photoUrl });\n//   };\n\n//   return (\n//     <div className=\"player-reports-container\">\n//       <div className=\"form-container\">\n//         <h2>Player Report</h2>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"playerName\">Enter Name of the Player:</label>\n//           <input\n//             type=\"text\"\n//             id=\"playerName\"\n//             value={playerName}\n//             onChange={(e) => setPlayerName(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"playerRole\">Enter Role of the Player:</label>\n//           <input\n//             type=\"text\"\n//             id=\"playerRole\"\n//             value={playerRole}\n//             onChange={(e) => setPlayerRole(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"summaryLength\">Summary Length (words):</label>\n//           <input\n//             type=\"number\"\n//             id=\"summaryLength\"\n//             value={summaryLength}\n//             onChange={(e) => setSummaryLength(e.target.value)}\n//           />\n//         </div>\n//         <button onClick={handleGenerate}>Generate</button>\n//       </div>\n//       <div className=\"summary-display1\">\n//         {playerPhotoUrl && (\n//           <div className=\"player-photo\">\n//             <img src={playerPhotoUrl} alt=\"Player\" />\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PlayerReports;\n\nimport React, { useState } from 'react';\nimport './PlayerReports.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerReports = () => {\n  _s();\n  const [playerName, setPlayerName] = useState('');\n  const [playerRole, setPlayerRole] = useState('');\n  const [playerPhotoUrl, setPlayerPhotoUrl] = useState('');\n  const [summaryLength, setSummaryLength] = useState(100);\n  const players = [{\n    name: 'Virat Kohli',\n    image: '/images/Virat Kohli.jpeg'\n  },\n  // Add more player names and their photo paths here\n  {\n    name: 'Abdul Samad',\n    image: 'Abdul Samad.jpeg'\n  }\n  // ...\n  ];\n\n  const getPlayerPhotos = () => {\n    const playerPhotos = {};\n    players.forEach(player => {\n      playerPhotos[player.name.toLowerCase()] = player.image;\n    });\n    return playerPhotos;\n  };\n  const playerPhotos = getPlayerPhotos();\n  const handleGenerate = async () => {\n    try {\n      const playerPhotoKey = playerName.toLowerCase();\n      const photoUrl = playerPhotos[playerPhotoKey] || '/images/default_player_image.jpeg';\n      const response = await fetch('http://127.0.0.1:5000/generate-report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          playerName,\n          playerRole,\n          playerPhotoUrl: photoUrl,\n          summaryLength\n        })\n      });\n      const data = await response.json();\n      if (data && data.image_url) {\n        setPlayerPhotoUrl(data.image_url);\n      } else {\n        alert('Failed to generate report. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error generating report:', error);\n      alert('Error generating report. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IPL Player Report Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerName\",\n        children: \"Player Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"playerName\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerRole\",\n        children: \"Player Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"playerRole\",\n        value: playerRole,\n        onChange: e => setPlayerRole(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"summaryLength\",\n        children: \"Summary Length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"summaryLength\",\n        value: summaryLength,\n        onChange: e => setSummaryLength(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), playerPhotoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-photo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: playerPhotoUrl,\n        alt: \"Player Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerReports, \"7xl9oqTK8OcqTCsxz9cmlrvuxu0=\");\n_c = PlayerReports;\nexport default PlayerReports;\nvar _c;\n$RefreshReg$(_c, \"PlayerReports\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PlayerReports","_s","playerName","setPlayerName","playerRole","setPlayerRole","playerPhotoUrl","setPlayerPhotoUrl","summaryLength","setSummaryLength","players","name","image","getPlayerPhotos","playerPhotos","forEach","player","toLowerCase","handleGenerate","playerPhotoKey","photoUrl","response","fetch","method","headers","body","JSON","stringify","data","json","image_url","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","parseInt","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/divya/OneDrive/Pictures/Desktop/IPL/ipl-coverage/src/components/PlayerReports.js"],"sourcesContent":["\r\n\r\n// import React, { useState } from 'react';\r\n// import './PlayerReports.css';\r\n\r\n// const PlayerReports = () => {\r\n//   const [playerName, setPlayerName] = useState('');\r\n//   const [playerRole, setPlayerRole] = useState('');\r\n//   const [playerPhotoUrl, setPlayerPhotoUrl] = useState('');\r\n//   const [summaryLength, setSummaryLength] = useState(100); // Added state for summary length\r\n\r\n//   const playerPhotos = {\r\n//     \"ViratKohli\": \"/images/Virat Kohli.jpeg\",\r\n//     \"Virat\": \"/images/Virat Kohli.jpeg\",\r\n//     \"Kohli\": \"/images/Virat Kohli.jpeg\",\r\n//     // Add more player names and their photo paths here\r\n//   };\r\n\r\n//   const handleGenerate = () => {\r\n//     const photoUrl = playerPhotos[playerName] || 'https://via.placeholder.com/150';\r\n//     setPlayerPhotoUrl(photoUrl);\r\n//     console.log({ playerName, playerRole, summaryLength, photoUrl });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"player-reports-container\">\r\n//       <div className=\"form-container\">\r\n//         <h2>Player Report</h2>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"playerName\">Enter Name of the Player:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"playerName\"\r\n//             value={playerName}\r\n//             onChange={(e) => setPlayerName(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"playerRole\">Enter Role of the Player:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"playerRole\"\r\n//             value={playerRole}\r\n//             onChange={(e) => setPlayerRole(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"summaryLength\">Summary Length (words):</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"summaryLength\"\r\n//             value={summaryLength}\r\n//             onChange={(e) => setSummaryLength(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <button onClick={handleGenerate}>Generate</button>\r\n//       </div>\r\n//       <div className=\"summary-display1\">\r\n//         {playerPhotoUrl && (\r\n//           <div className=\"player-photo\">\r\n//             <img src={playerPhotoUrl} alt=\"Player\" />\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PlayerReports;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './PlayerReports.css';\r\n\r\nconst PlayerReports = () => {\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [playerRole, setPlayerRole] = useState('');\r\n  const [playerPhotoUrl, setPlayerPhotoUrl] = useState('');\r\n  const [summaryLength, setSummaryLength] = useState(100);\r\n\r\n  const players = [\r\n    { name: 'Virat Kohli', image: '/images/Virat Kohli.jpeg' },\r\n    // Add more player names and their photo paths here\r\n    { name: 'Abdul Samad', image: 'Abdul Samad.jpeg' },\r\n    // ...\r\n  ];\r\n\r\n  const getPlayerPhotos = () => {\r\n    const playerPhotos = {};\r\n    players.forEach(player => {\r\n      playerPhotos[player.name.toLowerCase()] = player.image;\r\n    });\r\n    return playerPhotos;\r\n  };\r\n\r\n  const playerPhotos = getPlayerPhotos();\r\n\r\n  const handleGenerate = async () => {\r\n    try {\r\n      const playerPhotoKey = playerName.toLowerCase();\r\n      const photoUrl = playerPhotos[playerPhotoKey] || '/images/default_player_image.jpeg';\r\n\r\n      const response = await fetch('http://127.0.0.1:5000/generate-report', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ playerName, playerRole, playerPhotoUrl: photoUrl, summaryLength }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data && data.image_url) {\r\n        setPlayerPhotoUrl(data.image_url);\r\n      } else {\r\n        alert('Failed to generate report. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      alert('Error generating report. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>IPL Player Report Generator</h1>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"playerName\">Player Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"playerName\"\r\n          value={playerName}\r\n          onChange={(e) => setPlayerName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"playerRole\">Player Role</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"playerRole\"\r\n          value={playerRole}\r\n          onChange={(e) => setPlayerRole(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"summaryLength\">Summary Length</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"summaryLength\"\r\n          value={summaryLength}\r\n          onChange={(e) => setSummaryLength(parseInt(e.target.value))}\r\n        />\r\n      </div>\r\n      <button onClick={handleGenerate}>Generate Report</button>\r\n      {playerPhotoUrl && (\r\n        <div className=\"player-photo\">\r\n          <img src={playerPhotoUrl} alt=\"Player Photo\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerReports;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}